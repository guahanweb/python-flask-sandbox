#!/usr/bin/env bash

export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
export PROJECT_ROOT="$( dirname "${DIR}" )"

[[ -f ~/.bashrc ]] && source ~/.bashrc
[[ -f ${DIR}/settings.sh ]] && source ${DIR}/settings.sh
[[ -f ${DIR}/utils.sh ]] && source ${DIR}/utils.sh

unameOut="$(uname -a)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac

function usage() {
    local error=${1:-""}
    local scriptname=$( basename "$0" )

    echo ""
    echo "${YELLOW}usage:${NC} ${scriptname} <command>"
    echo ""

    if [[ ! -z "${error}" ]]
    then
        echo "${RED}[error]${NC} ${error}"
    fi
}

function activate() {
    cd ${PROJECT_ROOT}
    if [[ ! -d .venv ]]
    then
        # be sure to use the python3 binary on Mac
        if [ "$machine" == "Mac" ]; then
            python3 -m venv .venv
        else
            python -m venv .venv
        fi
    fi
    . .venv/bin/activate
}

if [ "$#" -gt 0 ]
then
    CMD=${1}
    shift

    case "${CMD}" in
        setup )
            activate
            if [[ -f requirements.txt ]]; then
                pip install -r requirements.txt
            fi
            deactivate
            ;;

        dev )
            activate
            flask --app src/app --debug run --extra-files templates:static
            deactivate
            ;;

        serve )
            activate
            gunicorn --chdir ${PROJECT_ROOT}/src --bind 0.0.0.0:5000 wsgi:app
            deactivate
            ;;
    esac
else
    usage "the following arguments are required: command"
    exit 1
fi
